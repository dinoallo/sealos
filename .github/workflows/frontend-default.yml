name: Default frontend workflow entry

on:
  create:
  pull_request:
    branches:
      - "*"
    paths:
      - "frontend/desktop/**"
      - "frontend/providers/**"
  push:
    branches:
      - main
    paths:
      - "frontend/desktop/**"
      - "frontend/providers/**"
  workflow_dispatch:
    inputs:
      needs_push:
        description: "Push the image after building it?"
        required: false
        type: boolean
        default: false
      push_image_tag:
        description: "The tag for the image to push"
        default: "latest"
        required: false
        type: string
      needs_cluster_image:
        description: "Build and push the cluster image after building the image?"
        required: false
        type: boolean
        default: false

jobs:
  fetch-sealos:
    permissions: {}
    uses: ./.github/workflows/fetch-sealos.yml
    with:
      artifact_name: "sealos"
  detect-frontend:
    needs: [fetch-sealos]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: read
    outputs:
      license: ${{ steps.filter.outputs.license }}
      cronjob: ${{ steps.filter.outputs.cronjob }}
      template: ${{ steps.filter.outputs.template }}
      adminer: ${{ steps.filter.outputs.adminer }}
      applaunchpad: ${{ steps.filter.outputs.applaunchpad }}
      terminal: ${{ steps.filter.outputs.terminal }}
      dbprovider: ${{ steps.filter.outputs.dbprovider }}
      costcenter: ${{ steps.filter.outputs.costcenter }}
      objectstorage: ${{ steps.filter.outputs.objectstorage }}
      kubepanel: ${{ steps.filter.outputs.kubepanel }}
      workorder: ${{ steps.filter.outputs.workorder }}
      devbox: ${{ steps.filter.outputs.devbox }}
      desktop: ${{ steps.filter.outputs.desktop }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        name: Filter all frontends
        with:
          filters: ./.github/frontend-filters.yml
  license-frontend:
    needs: [detect-frontend]
    if: ${{ needs.detect-frontend.outputs.license == 'true' }}
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/frontend.yml
    with:
      module_name: "license"
      module_path: "providers/license"
      needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
      needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  cronjob-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.cronjob == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "cronjob"
     module_path: "providers/cronjob"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  template-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.template == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "template"
     module_path: "providers/template"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  adminer-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.adminer == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "adminer"
     module_path: "providers/adminer"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  applaunchpad-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.applaunchpad == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "applaunchpad"
     module_path: "providers/applaunchpad"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  terminal-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.terminal == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "terminal"
     module_path: "providers/terminal"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  dbprovider-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.dbprovider == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "dbprovider"
     module_path: "providers/dbprovider"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  costcenter-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.costcenter == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "costcenter"
     module_path: "providers/costcenter"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  objectstorage-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.objectstorage == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "objectstorage"
     module_path: "providers/objectstorage"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  kubepanel-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.kubepanel == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "kubepanel"
     module_path: "providers/kubepanel"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  workorder-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.workorder == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "workorder"
     module_path: "providers/workorder"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  devbox-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.devbox == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "devbox"
     module_path: "providers/devbox"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}

  desktop-frontend:
   needs: [detect-frontend]
   if: ${{ needs.detect-frontend.outputs.desktop == 'true' }}
   permissions:
     contents: read
     packages: write
   uses: ./.github/workflows/frontend.yml
   with:
     module_name: "desktop"
     module_path: "desktop"
     needs_push: ${{ github.event_name == 'push' || github.event_name == 'create' || inputs.needs_push }}
     needs_cluster_image: ${{ github.event_name == 'push' || github.event_name == 'create' || (inputs.needs_push && inputs.needs_cluster_image) }}
