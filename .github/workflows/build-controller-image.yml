name: Build (and push) controller images

on:
  workflow_call:
    inputs:
      go_version:
        description: "The Golang version used for building"
        required: false
        type: string
        default: "1.22"
      module_name:
        description: "The name of the controller"
        required: true
        type: string
      module_path:
        description: "The path of the controller under `workdir` (it should be one of the subdirectories)"
        required: true
        type: string
      workdir:
        description: "The directory to find the controller"
        required: true
        type: string
      needs_push:
        description: "If this parameter is true, this workflow will push the image after building it"
        required: false
        type: boolean
        default: false
      repo:
        required: true
        type: string
      tag:
        required: true
        type: string
jobs:
  image-build:
    runs-on: ubuntu-24.04
    permissions:
    # If this workflow is trigged by `pull_requests` event from forked repository, this job will not be granted any write permission, 
    # so it's safe if we set packages: write here
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v5
        with:
          go-version: ${{ inputs.go_version }}

      - name: Build ${{ inputs.module_name }} amd64
        working-directory: ${{ inputs.workdir }}/${{ inputs.module_path }}
        env:
          MODULE_NAME: ${{ inputs.module_name }}
          MODULE_PATH: ${{ inputs.module_path }}
        run: |
          GOARCH=amd64 TARGETARCH=amd64 make build
          mv bin/manager "bin/controller-${MODULE_NAME}-amd64"
          chmod +x "bin/controller-${MODULE_NAME}-amd64"

      - name: Build ${{ inputs.module_name }} arm64
        working-directory: ${{ inputs.workdir }}/${{ inputs.module_path }}
        env:
          MODULE_NAME: ${{ inputs.module_name }}
          MODULE_PATH: ${{ inputs.module_path }}
        run: |
          GOARCH=arm64 TARGETARCH=arm64 make build
          mv bin/manager "bin/controller-${MODULE_NAME}-arm64"
          chmod +x "bin/controller-${MODULE_NAME}-arm64"
      - # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.repo }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ inputs.tag }},enable=true

      - name: build (and publish) ${{ inputs.module_name }} main image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.workdir }}/${{ inputs.module_path }}
          file: ${{ inputs.workdir }}/${{ inputs.module_path }}/Dockerfile
          push: ${{ inputs.needs_push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64