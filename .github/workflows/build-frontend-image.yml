name: Build Frontend Image

on:
  workflow_call:
    inputs:
      module_name:
        description: "The name of the frontend"
        required: true
        type: string
      module_path:
        description: "The path of the frontend under `workdir` (it should be one of the subdirectories)"
        required: true
        type: string
      workdir:
        description: "The directory to find the frontend"
        required: true
        type: string
      needs_push:
        description: "Push image"
        required: false
        type: boolean
        default: false
      push_image_tag:
        description: "Push image tag"
        default: "latest"
        required: false
        type: string

jobs:
  prepare:
    runs-on: ubuntu-24.04
    outputs:
      image_name: ${{ steps.generate_image_name.outputs.image_name }}
      tag_name: ${{ steps.generate_image_name.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Expose git commit data
        uses: rlespinasse/git-commit-data-action@v1 # required by resolve-tag-image.sh

      - name: Check if tagged
        id: check_tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "is_tag=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_tag=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate image name
        id: generate_image_name
        run: |  
          # generate tag_name
          bash scripts/resolve-tag-image.sh "${{ inputs.needs_push }}" "${{ steps.check_tag.outputs.is_tag }}" "${{ inputs.push_image_tag }}"
          echo "image_name=ghcr.io/${{ github.repository_owner }}/sealos-${{ inputs.module_name }}-frontend" >> "$GITHUB_OUTPUT"
  build:
    needs: [prepare]
    strategy:
      matrix:
        include:
          - arch: amd64
          - arch: arm64
            runs-on: ubuntu-24.04-arm
    runs-on: ${{ matrix.runs-on || 'ubuntu-24.04' }}
    permissions:
      contents: read
      # If this workflow is trigged by `pull_requests` event from forked repository, this job will not be granted any write permission, 
      # so it's safe if we set packages: write here
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ needs.prepare.outputs.image_name }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/${{ matrix.arch }}
          build-args: |
            name=${{ inputs.module_name }}
            path=${{ inputs.module_path }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,"name=${{ needs.prepare.outputs.image_name }}",name-canonical=true,push-by-digest=${{ inputs.needs_push }},push=${{ inputs.needs_push }}

      - name: Export digest
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          mkdir -p "${{ runner.temp }}/digests"
          touch "${{ runner.temp }}/digests/${DIGEST#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ inputs.module_name }}-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    name: Merge and push docker images
    runs-on: ubuntu-24.04
    needs: [prepare, build]
    permissions:
      contents: read
      packages: write
    if: ${{ inputs.needs_push }}
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ needs.prepare.outputs.image_name }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ needs.prepare.outputs.tag_name }},enable=true
            type=sha

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ needs.prepare.outputs.image_name }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ needs.prepare.outputs.image_name }}:${{ steps.meta.outputs.version }}