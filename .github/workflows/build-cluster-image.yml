name: Build (and push) cluster images

on:
  workflow_call:
    inputs:
      artifact_name:
        description: "The name of the artifact"
        required: true
        type: string
      module_name:
        description: "The name of the module"
        required: true
        type: string
      module_path:
        description: "The path of the module under `workdir` (it should be one of the subdirectories)"
        required: true
        type: string
      workdir:
        description: "The directory to find the module"
        required: true
        type: string
      needs_push:
        description: "If this parameter is true, this workflow will push the image after building it"
        required: false
        type: boolean
        default: false
      push_image_tag:
        description: "The tag for the image to push"
        default: "latest"
        required: false
        type: string
jobs:
  fetch-sealos:
    permissions: {}
    uses: ./.github/workflows/fetch-sealos.yml
    with:
      artifact_name: ${{ inputs.artifact_name }}
  build-cluster-image:
    needs: [fetch-sealos]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Expose git commit data
        uses: rlespinasse/git-commit-data-action@v1
      - name: Check if tag
        id: check_tag
        env:
          REF: ${{ github.ref }}
        run: |
          if [[ "$REF" == refs/tags/* ]]; then
            echo "isTag=true" >> "$GITHUB_OUTPUT"
          else
            echo "isTag=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Prepare
        id: prepare
        env:
          PUSH_IMAGE: ${{ inputs.needs_push }}
          IS_TAG: ${{ steps.check_tag.outputs.isTag }}
          PUSH_IMAGE_TAG: ${{ inputs.push_image_tag }}
          REPO_OWNER: ${{ github.repository_owner }}
          MODULE_NAME: ${{ inputs.module_name }}
        run: |
          tag_name=$(bash scripts/resolve-tag-image.sh "$PUSH_IMAGE" "$IS_TAG" "$PUSH_IMAGE_TAG")
          echo "old_docker_repo=ghcr.io/labring/sealos-${MODULE_NAME}-controller" >> $GITHUB_OUTPUT
          echo "new_docker_repo=ghcr.io/${REPO_OWNER}/sealos-${MODULE_NAME}-controller" >> $GITHUB_OUTPUT
          echo "cluster_repo=ghcr.io/${REPO_OWNER}/sealos-cloud-${MODULE_NAME}-controller" >> $GITHUB_OUTPUT
          echo "cluster_image=ghcr.io/${REPO_OWNER}/sealos-cloud-${MODULE_NAME}-controller:$tag_name" >> $GITHUB_OUTPUT
          echo "latest_cluster_image=ghcr.io/${REPO_OWNER}/sealos-cloud-${MODULE_NAME}-controller:latest" >> $GITHUB_OUTPUT

      - name: Download sealos
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: /tmp/
      - name: Verify sealos
        run: |
          sudo chmod a+x /tmp/sealos
          sudo mv /tmp/sealos /usr/bin/sealos
          sudo sealos version
      - name: Mutate image tag in deploy files
        working-directory: controllers/${{ inputs.module_path }}/deploy
        env:
          OLD_DOCKER_REPO: ${{ steps.prepare.outputs.old_docker_repo }}
          NEW_DOCKER_REPO: ${{ steps.prepare.outputs.new_docker_repo }}
          TAG_NAME: ${{ steps.prepare.outputs.tag_name }}
        run: |
          OLD_DOCKER_IMAGE_NAME="${OLD_DOCKER_REPO}:latest"
          NEW_DOCKER_IMAGE_NAME="${NEW_DOCKER_REPO}:${TAG_NAME}"
          sudo sed -i "s;${OLD_DOCKER_IMAGE_NAME};${NEW_DOCKER_IMAGE_NAME};" manifests/*

      - name: Sealos login to ghcr.io
        # if push to master, then login to ghcr.io
        env:
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo sealos login -u "${REPOSITORY_OWNER}" -p "${GITHUB_TOKEN}" --debug ghcr.io

      - name: Build ${{ inputs.module_name }}-controller cluster image
        working-directory: controllers/${{ inputs.module_path }}/deploy
        env:
          CLUSTER_IMAGE: ${{ steps.prepare.outputs.cluster_image }}
          LATEST_CLUSTER_IMAGE: ${{ steps.prepare.outputs.latest_cluster_image }}
        run: |
          sudo sealos build -t "${CLUSTER_IMAGE}-amd64" --platform linux/amd64 -f Kubefile
          sudo sealos build -t "${LATEST_CLUSTER_IMAGE}-amd64" --platform linux/amd64 -f Kubefile
          # delete old registry cache
          sudo rm -rf registry
          sudo sealos build -t "${CLUSTER_IMAGE}-arm64" --platform linux/arm64 -f Kubefile
          sudo sealos build -t "${LATEST_CLUSTER_IMAGE}-arm64" --platform linux/arm64 -f Kubefile

      - name: Manifest Cluster Images
        # if push to master, then patch images to ghcr.io
        env:
          OWNER: ${{ github.repository_owner }}
          CLUSTER_IMAGE: ${{ steps.prepare.outputs.cluster_image }}
          LATEST_CLUSTER_IMAGE: ${{ steps.prepare.outputs.latest_cluster_image }}
        run: |
          sudo sealos images
          bash scripts/manifest-cluster-images.sh "$CLUSTER_IMAGE"
          bash scripts/manifest-cluster-images.sh "$LATEST_CLUSTER_IMAGE"